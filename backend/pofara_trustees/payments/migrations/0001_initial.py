# Generated by Django 5.2.4 on 2025-07-28 08:34

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('projects', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Dispute',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('dispute_number', models.CharField(max_length=50, unique=True)),
                ('dispute_type', models.CharField(choices=[('payment_dispute', 'Payment Dispute'), ('service_dispute', 'Service Dispute'), ('quality_dispute', 'Quality Dispute'), ('refund_dispute', 'Refund Dispute'), ('escrow_dispute', 'Escrow Dispute'), ('chargeback', 'Chargeback'), ('other', 'Other')], max_length=30)),
                ('status', models.CharField(choices=[('open', 'Open'), ('under_review', 'Under Review'), ('awaiting_response', 'Awaiting Response'), ('mediation', 'In Mediation'), ('arbitration', 'In Arbitration'), ('resolved', 'Resolved'), ('closed', 'Closed'), ('cancelled', 'Cancelled')], default='open', max_length=30)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(help_text='Detailed description of the dispute')),
                ('disputed_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('evidence_documents', models.JSONField(blank=True, default=list)),
                ('resolution', models.CharField(blank=True, choices=[('favor_plaintiff', 'In Favor of Plaintiff'), ('favor_defendant', 'In Favor of Defendant'), ('partial_refund', 'Partial Refund'), ('full_refund', 'Full Refund'), ('no_action', 'No Action Required'), ('settlement', 'Settlement Agreement')], max_length=30)),
                ('resolution_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('resolution_notes', models.TextField(blank=True)),
                ('resolution_date', models.DateTimeField(blank=True, null=True)),
                ('due_date', models.DateField(help_text='Response due date')),
                ('escalated_at', models.DateTimeField(blank=True, null=True)),
                ('closed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('arbitrator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='arbitrated_disputes', to=settings.AUTH_USER_MODEL)),
                ('defendant', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='received_disputes', to=settings.AUTH_USER_MODEL)),
                ('mediator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mediated_disputes', to=settings.AUTH_USER_MODEL)),
                ('plaintiff', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='initiated_disputes', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='disputes', to='projects.project')),
            ],
            options={
                'verbose_name': 'Dispute',
                'verbose_name_plural': 'Disputes',
                'db_table': 'disputes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EscrowAccount',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('account_number', models.CharField(help_text='Unique escrow account identifier', max_length=50, unique=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('funded', 'Funded'), ('partially_released', 'Partially Released'), ('fully_released', 'Fully Released'), ('disputed', 'Disputed'), ('refunded', 'Refunded'), ('closed', 'Closed')], default='active', max_length=30)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('total_amount', models.DecimalField(decimal_places=2, help_text='Total escrow amount', max_digits=15)),
                ('available_balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('reserved_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('released_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('terms', models.TextField(help_text='Escrow terms and conditions')),
                ('release_conditions', models.JSONField(default=list, help_text='Conditions for fund release')),
                ('auto_release_enabled', models.BooleanField(default=False)),
                ('auto_release_days', models.PositiveIntegerField(default=0)),
                ('dispute_deadline', models.DateField(blank=True, null=True)),
                ('funded_at', models.DateTimeField(blank=True, null=True)),
                ('maturity_date', models.DateField(blank=True, null=True)),
                ('closed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('arbitrator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='arbitrated_escrows', to=settings.AUTH_USER_MODEL)),
                ('beneficiary', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='escrow_benefits', to=settings.AUTH_USER_MODEL)),
                ('depositor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='escrow_deposits', to=settings.AUTH_USER_MODEL)),
                ('project', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='escrow_account', to='projects.project')),
            ],
            options={
                'verbose_name': 'Escrow Account',
                'verbose_name_plural': 'Escrow Accounts',
                'db_table': 'escrow_accounts',
            },
        ),
        migrations.CreateModel(
            name='FinancialReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('report_number', models.CharField(max_length=50, unique=True)),
                ('report_type', models.CharField(choices=[('user_statement', 'User Statement'), ('project_financials', 'Project Financials'), ('tax_report', 'Tax Report'), ('escrow_summary', 'Escrow Summary'), ('transaction_summary', 'Transaction Summary'), ('revenue_report', 'Revenue Report')], max_length=30)),
                ('status', models.CharField(choices=[('generating', 'Generating'), ('ready', 'Ready'), ('failed', 'Failed'), ('expired', 'Expired')], default='generating', max_length=20)),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('data', models.JSONField(default=dict, help_text='Report data and calculations')),
                ('summary', models.JSONField(default=dict, help_text='Report summary statistics')),
                ('file', models.FileField(blank=True, null=True, upload_to='financial_reports/%Y/%m/')),
                ('file_format', models.CharField(default='pdf', help_text='Report file format', max_length=10)),
                ('is_confidential', models.BooleanField(default=True)),
                ('generated_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('access_granted_to', models.ManyToManyField(blank=True, related_name='accessible_reports', to=settings.AUTH_USER_MODEL)),
                ('generated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='generated_reports', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='financial_reports', to='projects.project')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='financial_reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Financial Report',
                'verbose_name_plural': 'Financial Reports',
                'db_table': 'financial_reports',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('invoice_number', models.CharField(help_text='Unique invoice identifier', max_length=50, unique=True)),
                ('invoice_type', models.CharField(choices=[('project_payment', 'Project Payment'), ('milestone_payment', 'Milestone Payment'), ('inspection_fee', 'Inspection Fee'), ('platform_fee', 'Platform Fee'), ('penalty', 'Penalty'), ('refund', 'Refund'), ('other', 'Other')], max_length=30)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('sent', 'Sent'), ('viewed', 'Viewed'), ('paid', 'Paid'), ('overdue', 'Overdue'), ('disputed', 'Disputed'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='draft', max_length=20)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=12)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('paid_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('tax_rate', models.DecimalField(decimal_places=4, default=0.0, max_digits=5)),
                ('tax_number', models.CharField(blank=True, help_text='Tax registration number', max_length=50)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('line_items', models.JSONField(default=list, help_text='Invoice line items')),
                ('payment_terms', models.TextField(blank=True)),
                ('due_date', models.DateField()),
                ('late_fee_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('viewed_at', models.DateTimeField(blank=True, null=True)),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, help_text='Internal notes')),
                ('public_notes', models.TextField(blank=True, help_text='Notes visible to customer')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('issued_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='issued_invoices', to=settings.AUTH_USER_MODEL)),
                ('issued_to', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='received_invoices', to=settings.AUTH_USER_MODEL)),
                ('milestone', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invoices', to='projects.projectmilestone')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invoices', to='projects.project')),
            ],
            options={
                'verbose_name': 'Invoice',
                'verbose_name_plural': 'Invoices',
                'db_table': 'invoices',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('method_type', models.CharField(choices=[('credit_card', 'Credit Card'), ('debit_card', 'Debit Card'), ('bank_account', 'Bank Account'), ('digital_wallet', 'Digital Wallet'), ('cryptocurrency', 'Cryptocurrency'), ('mobile_money', 'Mobile Money')], max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('pending_verification', 'Pending Verification'), ('verified', 'Verified'), ('suspended', 'Suspended'), ('expired', 'Expired')], default='pending_verification', max_length=30)),
                ('masked_number', models.CharField(help_text='Masked card/account number for display', max_length=20)),
                ('last_four_digits', models.CharField(max_length=4)),
                ('brand', models.CharField(blank=True, help_text='Card brand or bank name', max_length=50)),
                ('expiry_month', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)])),
                ('expiry_year', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(2020), django.core.validators.MaxValueValidator(2050)])),
                ('bank_name', models.CharField(blank=True, max_length=100)),
                ('account_holder_name', models.CharField(blank=True, max_length=200)),
                ('routing_number', models.CharField(blank=True, max_length=20)),
                ('swift_code', models.CharField(blank=True, max_length=11)),
                ('billing_country', models.CharField(blank=True, max_length=100)),
                ('billing_city', models.CharField(blank=True, max_length=100)),
                ('billing_address', models.TextField(blank=True)),
                ('billing_postal_code', models.CharField(blank=True, max_length=20)),
                ('provider_id', models.CharField(blank=True, help_text='Payment provider identifier', max_length=100)),
                ('provider_name', models.CharField(blank=True, help_text='Payment provider name', max_length=50)),
                ('is_default', models.BooleanField(default=False)),
                ('is_verified', models.BooleanField(default=False)),
                ('verification_date', models.DateTimeField(blank=True, null=True)),
                ('fingerprint', models.CharField(blank=True, help_text='Unique fingerprint for fraud detection', max_length=64)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_methods', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Payment Method',
                'verbose_name_plural': 'Payment Methods',
                'db_table': 'payment_methods',
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('transaction_number', models.CharField(help_text='Unique transaction identifier', max_length=50, unique=True)),
                ('transaction_type', models.CharField(choices=[('payment', 'Payment'), ('refund', 'Refund'), ('payout', 'Payout'), ('escrow_deposit', 'Escrow Deposit'), ('escrow_release', 'Escrow Release'), ('fee', 'Platform Fee'), ('bonus', 'Bonus'), ('penalty', 'Penalty'), ('adjustment', 'Adjustment')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('disputed', 'Disputed'), ('refunded', 'Refunded'), ('partially_refunded', 'Partially Refunded')], default='pending', max_length=30)),
                ('currency', models.CharField(default='USD', help_text='Currency code (ISO 4217)', max_length=3)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Transaction amount', max_digits=12)),
                ('fee_amount', models.DecimalField(decimal_places=2, default=0.0, help_text='Platform fee', max_digits=10)),
                ('net_amount', models.DecimalField(decimal_places=2, help_text='Net amount after fees', max_digits=12)),
                ('exchange_rate', models.DecimalField(decimal_places=6, default=1.0, max_digits=10)),
                ('original_currency', models.CharField(blank=True, max_length=3)),
                ('original_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('provider_name', models.CharField(blank=True, max_length=50)),
                ('provider_transaction_id', models.CharField(blank=True, max_length=100)),
                ('provider_reference', models.CharField(blank=True, max_length=100)),
                ('description', models.TextField(help_text='Transaction description')),
                ('reference_number', models.CharField(blank=True, help_text='External reference number', max_length=100)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('authorized_at', models.DateTimeField(blank=True, null=True)),
                ('captured_at', models.DateTimeField(blank=True, null=True)),
                ('settled_at', models.DateTimeField(blank=True, null=True)),
                ('failure_code', models.CharField(blank=True, max_length=50)),
                ('failure_message', models.TextField(blank=True)),
                ('retry_count', models.PositiveIntegerField(default=0)),
                ('risk_score', models.DecimalField(blank=True, decimal_places=2, help_text='Fraud risk score (0-100)', max_digits=5, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional transaction metadata')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('invoice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transactions', to='payments.invoice')),
                ('milestone', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transactions', to='projects.projectmilestone')),
                ('payee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='payments_received', to=settings.AUTH_USER_MODEL)),
                ('payer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='payments_made', to=settings.AUTH_USER_MODEL)),
                ('payment_method', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transactions', to='payments.paymentmethod')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transactions', to='projects.project')),
            ],
            options={
                'verbose_name': 'Transaction',
                'verbose_name_plural': 'Transactions',
                'db_table': 'transactions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EscrowTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('deposit', 'Deposit'), ('release', 'Release'), ('refund', 'Refund'), ('dispute_hold', 'Dispute Hold'), ('dispute_release', 'Dispute Release'), ('penalty', 'Penalty'), ('interest', 'Interest')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('release_reason', models.TextField(blank=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_escrow_releases', to=settings.AUTH_USER_MODEL)),
                ('dispute', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='escrow_transactions', to='payments.dispute')),
                ('escrow_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='escrow_transactions', to='payments.escrowaccount')),
                ('milestone', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='escrow_releases', to='projects.projectmilestone')),
                ('transaction', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='escrow_transaction', to='payments.transaction')),
            ],
            options={
                'verbose_name': 'Escrow Transaction',
                'verbose_name_plural': 'Escrow Transactions',
                'db_table': 'escrow_transactions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='dispute',
            name='transaction',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='disputes', to='payments.transaction'),
        ),
        migrations.AddIndex(
            model_name='escrowaccount',
            index=models.Index(fields=['account_number'], name='escrow_acco_account_1c22eb_idx'),
        ),
        migrations.AddIndex(
            model_name='escrowaccount',
            index=models.Index(fields=['depositor'], name='escrow_acco_deposit_f445b1_idx'),
        ),
        migrations.AddIndex(
            model_name='escrowaccount',
            index=models.Index(fields=['beneficiary'], name='escrow_acco_benefic_ae6cff_idx'),
        ),
        migrations.AddIndex(
            model_name='escrowaccount',
            index=models.Index(fields=['project'], name='escrow_acco_project_32d894_idx'),
        ),
        migrations.AddIndex(
            model_name='escrowaccount',
            index=models.Index(fields=['status'], name='escrow_acco_status_7594c0_idx'),
        ),
        migrations.AddIndex(
            model_name='escrowaccount',
            index=models.Index(fields=['maturity_date'], name='escrow_acco_maturit_11b556_idx'),
        ),
        migrations.AddIndex(
            model_name='financialreport',
            index=models.Index(fields=['report_number'], name='financial_r_report__d37752_idx'),
        ),
        migrations.AddIndex(
            model_name='financialreport',
            index=models.Index(fields=['user', 'report_type'], name='financial_r_user_id_e87d4f_idx'),
        ),
        migrations.AddIndex(
            model_name='financialreport',
            index=models.Index(fields=['status'], name='financial_r_status_de55b1_idx'),
        ),
        migrations.AddIndex(
            model_name='financialreport',
            index=models.Index(fields=['period_start', 'period_end'], name='financial_r_period__c21fc0_idx'),
        ),
        migrations.AddIndex(
            model_name='financialreport',
            index=models.Index(fields=['created_at'], name='financial_r_created_679fd3_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['invoice_number'], name='invoices_invoice_7778bc_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['issued_by'], name='invoices_issued__31a618_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['issued_to'], name='invoices_issued__9a5ea9_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['status'], name='invoices_status_07776b_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['due_date'], name='invoices_due_dat_039a25_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['project'], name='invoices_project_bebff2_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['created_at'], name='invoices_created_bfa8ab_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentmethod',
            index=models.Index(fields=['user', 'status'], name='payment_met_user_id_cad3f0_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentmethod',
            index=models.Index(fields=['method_type'], name='payment_met_method__c0df5d_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentmethod',
            index=models.Index(fields=['is_default'], name='payment_met_is_defa_11be74_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['transaction_number'], name='transaction_transac_b11dd9_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['payer', 'status'], name='transaction_payer_i_7118ce_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['payee', 'status'], name='transaction_payee_i_d91259_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['transaction_type'], name='transaction_transac_ddda52_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['status'], name='transaction_status_505a2f_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['project'], name='transaction_project_a4d612_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['created_at'], name='transaction_created_5c02ac_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['processed_at'], name='transaction_process_874789_idx'),
        ),
        migrations.AddIndex(
            model_name='escrowtransaction',
            index=models.Index(fields=['escrow_account', 'transaction_type'], name='escrow_tran_escrow__5a816b_idx'),
        ),
        migrations.AddIndex(
            model_name='escrowtransaction',
            index=models.Index(fields=['transaction'], name='escrow_tran_transac_ce913f_idx'),
        ),
        migrations.AddIndex(
            model_name='escrowtransaction',
            index=models.Index(fields=['milestone'], name='escrow_tran_milesto_3bc5a5_idx'),
        ),
        migrations.AddIndex(
            model_name='escrowtransaction',
            index=models.Index(fields=['created_at'], name='escrow_tran_created_f5e261_idx'),
        ),
        migrations.AddIndex(
            model_name='dispute',
            index=models.Index(fields=['dispute_number'], name='disputes_dispute_e46e64_idx'),
        ),
        migrations.AddIndex(
            model_name='dispute',
            index=models.Index(fields=['plaintiff'], name='disputes_plainti_cc02e5_idx'),
        ),
        migrations.AddIndex(
            model_name='dispute',
            index=models.Index(fields=['defendant'], name='disputes_defenda_c6cb72_idx'),
        ),
        migrations.AddIndex(
            model_name='dispute',
            index=models.Index(fields=['status'], name='disputes_status_811094_idx'),
        ),
        migrations.AddIndex(
            model_name='dispute',
            index=models.Index(fields=['dispute_type'], name='disputes_dispute_67d170_idx'),
        ),
        migrations.AddIndex(
            model_name='dispute',
            index=models.Index(fields=['due_date'], name='disputes_due_dat_fced27_idx'),
        ),
        migrations.AddIndex(
            model_name='dispute',
            index=models.Index(fields=['created_at'], name='disputes_created_263e71_idx'),
        ),
    ]
