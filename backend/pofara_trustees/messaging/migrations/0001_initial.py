# Generated by Django 5.2.4 on 2025-07-28 08:34

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('conversation_type', models.CharField(choices=[('direct', 'Direct Message'), ('group', 'Group Chat'), ('project', 'Project Discussion'), ('support', 'Support Ticket'), ('announcement', 'Announcement')], default='direct', max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('archived', 'Archived'), ('closed', 'Closed'), ('suspended', 'Suspended')], default='active', max_length=20)),
                ('title', models.CharField(blank=True, help_text='Conversation title for group chats', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Conversation description')),
                ('object_id', models.CharField(blank=True, max_length=255, null=True)),
                ('is_encrypted', models.BooleanField(default=True, help_text='End-to-end encryption enabled')),
                ('allow_file_sharing', models.BooleanField(default=True)),
                ('auto_archive_days', models.PositiveIntegerField(default=0, help_text='Auto-archive after X days (0 = never)')),
                ('last_message_at', models.DateTimeField(blank=True, null=True)),
                ('message_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_conversations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Conversation',
                'verbose_name_plural': 'Conversations',
                'db_table': 'conversations',
                'ordering': ['-last_message_at', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ConversationParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('owner', 'Owner'), ('admin', 'Admin'), ('moderator', 'Moderator'), ('member', 'Member'), ('read_only', 'Read Only')], default='member', max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('left', 'Left'), ('removed', 'Removed'), ('muted', 'Muted')], default='active', max_length=20)),
                ('can_send_messages', models.BooleanField(default=True)),
                ('can_share_files', models.BooleanField(default=True)),
                ('can_add_participants', models.BooleanField(default=False)),
                ('can_remove_participants', models.BooleanField(default=False)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('last_read_at', models.DateTimeField(blank=True, null=True)),
                ('last_active_at', models.DateTimeField(auto_now=True)),
                ('notifications_enabled', models.BooleanField(default=True)),
                ('mention_notifications', models.BooleanField(default=True)),
                ('email_notifications', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='added_participants', to=settings.AUTH_USER_MODEL)),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversation_participants', to='messaging.conversation')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversation_participations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Conversation Participant',
                'verbose_name_plural': 'Conversation Participants',
                'db_table': 'conversation_participants',
            },
        ),
        migrations.AddField(
            model_name='conversation',
            name='participants',
            field=models.ManyToManyField(related_name='conversations', through='messaging.ConversationParticipant', through_fields=('conversation', 'user'), to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('message_type', models.CharField(choices=[('text', 'Text Message'), ('file', 'File Attachment'), ('image', 'Image'), ('video', 'Video'), ('audio', 'Audio'), ('location', 'Location'), ('system', 'System Message'), ('notification', 'Notification')], default='text', max_length=20)),
                ('status', models.CharField(choices=[('sent', 'Sent'), ('delivered', 'Delivered'), ('read', 'Read'), ('failed', 'Failed'), ('deleted', 'Deleted')], default='sent', max_length=20)),
                ('content', models.TextField(help_text='Message content (encrypted if encryption enabled)')),
                ('plain_content', models.TextField(blank=True, help_text='Plain text content for search indexing')),
                ('hashtags', models.JSONField(blank=True, default=list, help_text='Message hashtags')),
                ('attachments', models.JSONField(blank=True, default=list, help_text='List of file attachment metadata')),
                ('edited', models.BooleanField(default=False)),
                ('edited_at', models.DateTimeField(blank=True, null=True)),
                ('edit_history', models.JSONField(blank=True, default=list)),
                ('encryption_key_id', models.CharField(blank=True, max_length=64)),
                ('signature', models.TextField(blank=True, help_text='Digital signature for message integrity')),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('is_important', models.BooleanField(default=False)),
                ('is_urgent', models.BooleanField(default=False)),
                ('requires_response', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='messaging.conversation')),
                ('mentioned_users', models.ManyToManyField(blank=True, related_name='mentioned_in_messages', to=settings.AUTH_USER_MODEL)),
                ('reply_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='replies', to='messaging.message')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL)),
                ('thread_root', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='thread_messages', to='messaging.message')),
            ],
            options={
                'verbose_name': 'Message',
                'verbose_name_plural': 'Messages',
                'db_table': 'messages',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='MessageAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='message_attachments/%Y/%m/')),
                ('filename', models.CharField(max_length=255)),
                ('file_size', models.PositiveIntegerField(help_text='File size in bytes')),
                ('file_type', models.CharField(help_text='MIME type', max_length=50)),
                ('attachment_type', models.CharField(choices=[('image', 'Image'), ('video', 'Video'), ('audio', 'Audio'), ('document', 'Document'), ('archive', 'Archive'), ('other', 'Other')], max_length=20)),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='message_thumbnails/%Y/%m/')),
                ('preview_url', models.URLField(blank=True, help_text='URL for file preview')),
                ('is_scanned', models.BooleanField(default=False, help_text='File scanned for malware')),
                ('scan_result', models.CharField(blank=True, max_length=50)),
                ('checksum', models.CharField(help_text='File integrity checksum', max_length=64)),
                ('is_public', models.BooleanField(default=False)),
                ('download_count', models.PositiveIntegerField(default=0)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='message_attachments', to='messaging.message')),
            ],
            options={
                'verbose_name': 'Message Attachment',
                'verbose_name_plural': 'Message Attachments',
                'db_table': 'message_attachments',
            },
        ),
        migrations.CreateModel(
            name='MessageReadReceipt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('read_at', models.DateTimeField(auto_now_add=True)),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='read_receipts', to='messaging.message')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='message_read_receipts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Message Read Receipt',
                'verbose_name_plural': 'Message Read Receipts',
                'db_table': 'message_read_receipts',
            },
        ),
        migrations.AddField(
            model_name='message',
            name='read_by',
            field=models.ManyToManyField(related_name='read_messages', through='messaging.MessageReadReceipt', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notification_type', models.CharField(choices=[('message', 'New Message'), ('mention', 'Mention'), ('project_update', 'Project Update'), ('milestone_completed', 'Milestone Completed'), ('inspection_scheduled', 'Inspection Scheduled'), ('payment_received', 'Payment Received'), ('payment_due', 'Payment Due'), ('verification_required', 'Verification Required'), ('system_alert', 'System Alert'), ('welcome', 'Welcome'), ('reminder', 'Reminder')], max_length=30)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent')], default='normal', max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('read', 'Read'), ('dismissed', 'Dismissed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('short_message', models.CharField(blank=True, help_text='Short version for mobile notifications', max_length=100)),
                ('object_id', models.CharField(blank=True, max_length=255, null=True)),
                ('action_url', models.URLField(blank=True, help_text='URL to navigate to when notification is clicked')),
                ('action_text', models.CharField(blank=True, help_text='Text for action button', max_length=50)),
                ('send_email', models.BooleanField(default=False)),
                ('send_sms', models.BooleanField(default=False)),
                ('send_push', models.BooleanField(default=True)),
                ('send_in_app', models.BooleanField(default=True)),
                ('scheduled_for', models.DateTimeField(blank=True, help_text='Schedule notification for future delivery', null=True)),
                ('expires_at', models.DateTimeField(blank=True, help_text='Notification expiry time', null=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('email_sent_at', models.DateTimeField(blank=True, null=True)),
                ('sms_sent_at', models.DateTimeField(blank=True, null=True)),
                ('push_sent_at', models.DateTimeField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional notification metadata')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'db_table': 'notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_enabled', models.BooleanField(default=True)),
                ('sms_enabled', models.BooleanField(default=False)),
                ('push_enabled', models.BooleanField(default=True)),
                ('in_app_enabled', models.BooleanField(default=True)),
                ('message_notifications', models.BooleanField(default=True)),
                ('mention_notifications', models.BooleanField(default=True)),
                ('project_notifications', models.BooleanField(default=True)),
                ('payment_notifications', models.BooleanField(default=True)),
                ('marketing_notifications', models.BooleanField(default=False)),
                ('system_notifications', models.BooleanField(default=True)),
                ('quiet_hours_enabled', models.BooleanField(default=False)),
                ('quiet_hours_start', models.TimeField(default='22:00')),
                ('quiet_hours_end', models.TimeField(default='08:00')),
                ('digest_frequency', models.CharField(choices=[('immediate', 'Immediate'), ('hourly', 'Hourly'), ('daily', 'Daily'), ('weekly', 'Weekly'), ('never', 'Never')], default='immediate', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification_preferences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification Preference',
                'verbose_name_plural': 'Notification Preferences',
                'db_table': 'notification_preferences',
            },
        ),
        migrations.AddIndex(
            model_name='conversationparticipant',
            index=models.Index(fields=['conversation', 'status'], name='conversatio_convers_6c1a0e_idx'),
        ),
        migrations.AddIndex(
            model_name='conversationparticipant',
            index=models.Index(fields=['user', 'status'], name='conversatio_user_id_7dfa19_idx'),
        ),
        migrations.AddIndex(
            model_name='conversationparticipant',
            index=models.Index(fields=['role'], name='conversatio_role_7e11b3_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='conversationparticipant',
            unique_together={('conversation', 'user')},
        ),
        migrations.AddIndex(
            model_name='conversation',
            index=models.Index(fields=['conversation_type'], name='conversatio_convers_29a8ff_idx'),
        ),
        migrations.AddIndex(
            model_name='conversation',
            index=models.Index(fields=['status'], name='conversatio_status_742c74_idx'),
        ),
        migrations.AddIndex(
            model_name='conversation',
            index=models.Index(fields=['created_by'], name='conversatio_created_bc3dde_idx'),
        ),
        migrations.AddIndex(
            model_name='conversation',
            index=models.Index(fields=['last_message_at'], name='conversatio_last_me_594294_idx'),
        ),
        migrations.AddIndex(
            model_name='conversation',
            index=models.Index(fields=['content_type', 'object_id'], name='conversatio_content_d5b00f_idx'),
        ),
        migrations.AddIndex(
            model_name='messageattachment',
            index=models.Index(fields=['message'], name='message_att_message_2a1fa5_idx'),
        ),
        migrations.AddIndex(
            model_name='messageattachment',
            index=models.Index(fields=['attachment_type'], name='message_att_attachm_b9caa0_idx'),
        ),
        migrations.AddIndex(
            model_name='messageattachment',
            index=models.Index(fields=['uploaded_at'], name='message_att_uploade_690065_idx'),
        ),
        migrations.AddIndex(
            model_name='messagereadreceipt',
            index=models.Index(fields=['message'], name='message_rea_message_47f643_idx'),
        ),
        migrations.AddIndex(
            model_name='messagereadreceipt',
            index=models.Index(fields=['user', 'read_at'], name='message_rea_user_id_41ebd1_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='messagereadreceipt',
            unique_together={('message', 'user')},
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['conversation', 'created_at'], name='messages_convers_3ebb41_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['sender'], name='messages_sender__6ae55a_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['message_type'], name='messages_message_5af74b_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['status'], name='messages_status_72d01d_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['reply_to'], name='messages_reply_t_313c91_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['is_important'], name='messages_is_impo_a15e63_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['recipient', 'status'], name='notificatio_recipie_218e2a_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['notification_type'], name='notificatio_notific_19df93_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['priority'], name='notificatio_priorit_17ee5f_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['scheduled_for'], name='notificatio_schedul_3d00b6_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['created_at'], name='notificatio_created_e4c995_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['content_type', 'object_id'], name='notificatio_content_3c688e_idx'),
        ),
    ]
